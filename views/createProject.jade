extends layout
block nav-left-content
  li
    a#blck(href='home')
      |  Home
  li
    a#blck(href='createProject')
      |  Create Project
  li
     a#blck(href='profile')
      |  Profile
  li
     button#blck.dropbtn(onclick='dropdown()')
      |  &#x2630
     #myDropdown.dropdown-content 
            a(href='settings') Settings
            br
            a(href='#about') Logout
            br
     script.
            console.log("nav bar loading...")
              // When the user clicks on the dropdown button,
              //toggle between hiding and showing the dropdown content 
              
              function dropdown() {
                  console.log("dropdown function triggered");
                  document.getElementById("myDropdown").classList.toggle("show");
                  console.log("dropdown function success")
                  }
                // Close the dropdown if the user clicks outside of it
                
              window.onclick = function(event) {
                  if (!event.target.matches('.dropbtn')) {
                  var dropdowns = document.getElementsByClassName("dropdown-content");
                  var i;
                  for (i = 0; i < dropdowns.length; i++) {
                  var openDropdown = dropdowns[i];
                  if (openDropdown.classList.contains('show')) {
                  openDropdown.classList.remove('show');
                  }
                  }
                  }
                  }
                console.log("done."); 
block content
  .main.container
    .row
      .col-md-6.col-md-offset-3
        h1.display-4.m-b-2 Create Project

        // register form
        form(target ="_self" )
          div.projectName
            label(for='pName') Project Name: 
            input#pName.form-control(type='text', placeholder='Project Name' name='pName' required)
          div.projectOwner
            label(for='pOwner') Project Owner: 
            input#pOwner.form-control(type='text', placeholder='Project Owner' name='pOwner' required)
          div.description
            p 
                span Enter the Project Description
            p
                textarea(cols='40', rows='10', name='textarea')
          div.relevantTags
            p
                span Relevant Tags: 
            p
                textarea(cols='40', rows='10', name='tags' placeholder="Enter relevant project tags here separated by whitespace")
          
          button.btn.btn-primary(type = 'submit' onclick="checkform();") Create Project
          
  script.
    function checkform() {
    
      var name = document.getElementsByName("pName")[0].value;
      var owner = document.getElementsByName("pOwner")[0].value;
      var description = document.getElementsByName("textarea")[0].value;
      var tags = document.getElementsByName("tags")[0].value.split(' ');
    
      // get all the inputs within the submitted form
      var inputs = document.getElementsByTagName("input");
      //ReadCookie();
      //console.log("Entered into the ReadCookie method");
      var allcookies = document.cookie;
      console.log("All Cookies : " + allcookies );
      cookiearray = allcookies.split(';');
      var userEname = "";
      var userPvalue = "";
       for(var i=0; i<cookiearray.length; i++)
      {
        userEname = cookiearray[i].split('=')[0];
        userPvalue = cookiearray[i].split('=')[1];
        
         
          if(userEname.trim() =='username')
          {
            //console.log("Key is : " + userEname + " and Value is : " + userPvalue);
            break;
          }
          else
          {
            console.log(userEname.length);
            console.log('username'.length);
          }
        
      }
      
      for (var i = 0; i < inputs.length; i++) {
          // only validate the inputs that have the required attribute
          if(inputs[i].hasAttribute("required")){
            if(inputs[i].value == ""){
              // found an empty field that is required
              alert("Please fill all required fields");
              return false;
            }
            else if(/[^a-zA-Z0-9@. ]/.test(inputs[i].value)) {
              alert('Input must be alphanumeric');
              return false;
            }
          }
      }
      
      accessDB(name, owner, description, tags, userEname, userPvalue);
      // todo: redirect to a new page after the project has been added to the database.

    }
  
    // todo: store the project data in firebase.
    function accessDB(name, owner, description, tags, userEname, userPvalue){
    console.log(userPvalue);
    window.alert("Entered accessDB method");
  
      
      var database = firebase.database();
      var reference = database.ref("Projects").child(userPvalue);
      var Projects ={
        project_name:name,
        project_owner: owner,
        project_description: description,
        project_tags: tags
       
      }
      reference.push(Projects);
      console.log("Finished Pushing mah dude");
      
    return true;
    }