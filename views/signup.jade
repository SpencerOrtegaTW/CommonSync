extends layout
block nav-content
  li
    a#blck(href='login')
      span.glyphicon.glyphicon-log-in
      |  Login
  li
    a#blck(href='/')
      span.glyphicon.glyphicon-exit
      |  Cancel
  
      
block content
  .main.container(style="margin-top: 5%")
    .row
      .col-md-6.col-md-offset-3
        h1.display-4.m-b-2 Sign Up
        form(target ="_signup")
          div.fullName
            label(for='name') Name:
            input#name.form-control(type='text', placeholder='first and last' name='name' required)
          div.userName
            label(for='name') Username:
            input#username.form-control(type='text', placeholder='username' name='username' required)
          div.email
            label(for='email') Email:
            input#email.form-control(type='email', placeholder='name@email.com' name='email' required)
          div.interests
            label(for='interests') Interests: 
            .checkboxtoprow
              input(type="checkbox", name="networking", checked=(true===false ? "checked" : undefined))
              span.interest1 Networking
              input(type="checkbox", name="security", checked=(true===false ? "checked" : undefined))
              span.interest2 Security
              input(type="checkbox", name="web development", checked=(true===false ? "checked" : undefined))
              span.interest3 Web Development
              input(type="checkbox", name="mobile development", checked=(true===false ? "checked" : undefined))
              span.interest4 Mobile Development
            .checkboxbottomrow
              input(type="checkbox", name="Java", checked=(true===false ? "checked" : undefined))
              span.interest5 Java
              input(type="checkbox", name="C++", checked=(true===false ? "checked" : undefined))
              span.interest6 C++
              input(type="checkbox", name="Python", checked=(true===false ? "checked" : undefined))
              span.interest7 Python
              input(type="checkbox", name="Javascript", checked=(true===false ? "checked" : undefined))
              span.interest8 Javascript
          div.passWord
            label(for='pw') Password:
            input#pw.form-control(type='password' name='password' required)
          div.confirmPassWord
            label(for='pw2') Confirm Password:
            input#pw2.form-control(type='password' name='confirmPassword' required)
          button.btn.btn-primary(type = 'submit' onclick="submitClick();" formaction ='home') Data base test
          // button.btn.btn-primary(type='submit' onclick="checkform();") Sign up
          
  script.
    function submitClick(){
      // get all the inputs within the submitted form
      var inputs = document.getElementsByTagName("input");
      
      for (var i = 0; i < inputs.length; i++) {
          // only validate the inputs that have the required attribute
          if(inputs[i].hasAttribute("required")){
            if(inputs[i].value == ""){
              // found an empty field that is required
              alert("Please fill all required fields");
              return false;
            }
            else if(/[^a-zA-Z0-9@. ]/.test(inputs[i].value)) {
              alert('Input must be alphanumeric');
              return false;
            }
          }
      }
      
      //TODO: store config information into env variables.
      window.alert("Finally I can test!!");
      // general user information 
      var password = document.getElementById("pw").value;
      var confirmPW = document.getElementById("pw2").value;
      var name = document.getElementsByName("name")[0].value;
      var username = document.getElementsByName("username")[0].value;
      var email = document.getElementsByName("email")[0].value;
      var database = firebase.database();
      var ref = database.ref('Users');
      var data = {
      password: password,
      name: name,
      username: username,
      email: email
        
      }
      ref.push(data)
      // pushing a unique user into the database.
      //interests
      
      var networking = document.getElementsByName("networking")[0].checked;
      var security = document.getElementsByName("security")[0].checked;
      var webdev = document.getElementsByName("web development")[0].checked;
      var mobiledev = document.getElementsByName("mobile development")[0].checked;
      var java = document.getElementsByName("Java")[0].checked;
      var cpp = document.getElementsByName("C++")[0].checked;
      var python = document.getElementsByName("Python")[0].checked;
      var javascript = document.getElementsByName("Javascript")[0].checked;
      var ref2 = database.ref("Interests").child(username);
      var interests ={
        
        networking: networking,
        security: security,
        webdev: webdev,
        java: java,
        cpp: cpp,
        python: python,
        js: javascript
        
      }
      ref2.push(interests);
      // pushing the users interests
      //projects
      //TO:DO find a way to reference off of a unique ID.
      //Find a way to redirect a page after user data is added to firebase
      window.location.replace("home.jade");
    }
